version: "3"

services:
  postgres-template:
    image: postgres
    profiles:
      - template
    networks:
      - acme_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${DATABASE_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5
    shm_size: 128mb

  postgres:
    extends: postgres-template
    container_name: acme-postgres
    profiles:
      - services
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_DB: ${DATABASE_NAME}

  postgres-supertokens:
    extends: postgres-template
    container_name: acme-postgres-supertokens
    profiles:
      - services
    environment:
      POSTGRES_USER: supertokens
      POSTGRES_PASSWORD: password
      POSTGRES_DB: supertokens

  supertokens:
    container_name: acme-supertokens
    image: registry.supertokens.io/supertokens/supertokens-mysql:7.0
    profiles:
      - services
    depends_on:
      postgres-supertokens:
        condition: service_healthy
    ports:
      - 3567:3567
    environment:
      POSTGRESQL_CONNECTION_URI: postgres://supertokens:password@postgres-supertokens:5432/supertokens
    networks:
      - acme_network
    restart: unless-stopped
    healthcheck:
      test: >
        bash -c 'exec 3<>/dev/tcp/127.0.0.1/3567 && echo -e "GET /hello HTTP/1.1\r\nhost: 127.0.0.1:3567\r\nConnection: close\r\n\r\n" >&3 && cat <&3 | grep "Hello"'
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  acme_network:
    name: acme_network
    driver: bridge
